version: '3.8'
services:
  clean_db:
    image: mysql
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql:/docker-entrypoint-initdb.d
    container_name: clean_db
    networks:
      - container-link
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: $DATABASE_MYSQL_DBNAME
      MYSQL_USER: $DATABASE_MYSQL_USER
      MYSQL_PASSWORD: $DATABASE_MYSQL_PASSWORD
      TZ: $DATABASE_MYSQL_TIMEZONE

  golang:
    build: .
    volumes:
      - ./:/app
      - ./images:/images
    working_dir: /app
    command: go run main.go
    container_name: clean_app
    networks:
      - container-link
    depends_on:
      - clean_db
    ports:
      - '8080:8000'
    environment:
      MYSQL_DB_HOST: clean_db
      MYSQL_DB: $DATABASE_MYSQL_DBNAME
      MYSQL_PORT: $DATABASE_MYSQL_PORT
      MYSQL_USER: $DATABASE_MYSQL_USER
      MYSQL_PASSWORD: $DATABASE_MYSQL_PASSWORD
      APP_LISTEN_PORT: $APP_LISTEN_PORT
      SIGNINGKEY: $SIGNINGKEY

  localstack:
    image: localstack/localstack:latest
    environment:
      SERVICES: s3
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      DEFAULT_REGION: ${AWS_REGION}
      DATA_DIR: /tmp/localstack/data
      LAMBDA_DOCKER_NETWORK: host
    volumes:
      - $PWD/.local/localstack:/tmp/localstack
    ports:
      - '9000:9000'
      - '4566-4578:4566-4578'
    networks:
      - localstack

networks:
  default:
    external:
      name: bridge
  container-link:
    name: clean-architecture
  localstack:

volumes:
  mysql_data:
